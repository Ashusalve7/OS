Worst_fit

#include<stdio.h>
#include<stdlib.h>
#define max 25
int main()
{
    int frag[max], b[max], f[max], bf[max]={0}, ff[max], i, j, nb, nf,  temp;
    system("clr");
    printf("\n\tMemory Management Scheme - First Fit\n"); 
    printf("Enter the number of blocks:");
    scanf("%d", &nb); 
    printf("Enter the number of files:"); 
    scanf("%d", &nf);
    printf("\nEnter the size of the blocks:-\n"); 
    for(i=1; i<=nb; i++)
    {
        printf("Block %d:", i); 
        scanf("%d", &b[i]);
    }
    printf("\nEnter the size of the files:\n"); 
    for(i=1; i<=nf; i++)
    {
        printf("File %d:", i); 
        scanf("%d", &f[i]);
    }
    for(i=1; i<=nf; i++)
    {
        for(j=1; j<=nb; j++)
        {
            if(bf[j]!=1)
            {
                temp=b[j]-f[i];
                if(temp>=0)
                {
                    ff[i]=j;
                    break;
                }
            }
        }
        frag[i]=temp; 
        bf[ff[i]]=1;
    }
    printf("\nFile_no:\tFile_size:\tBlock_no:\tBlock_size:\tFragement"); 
    for(i=1; i<nf; i++)
        printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d", i, f[i], ff[i], b[ff[i]], frag[i]);
return 0;
}

Best_fit:
#include<stdio.h>
#define max 25
int main()
{
    int frag[max], b[max], f[max], bf[max]={0}, ff[max]={0};
    int i, j, nb, nf, temp, lowest=10000;
    system("clr");
    printf("Enter the number of blocks");
    scanf("%d", &nb);
    printf("Enter the number of files");
    scanf("%d", &nf);
    printf("\nEnter the size of the blocks:\n");
    for(i=1; i<=nb; i++)
        printf("Block %d:", i); 
        scanf("%d", &b[i]);
        printf("Enter the size of the files\n");
        for(i=1; i<=nf; i++)
        {
            printf("File %d:",i);
            scanf("%d", &f[i]);
        }
        for(i=1; i<=nf; i++)
        {
            for(j=1; nb;j++)
            {
                if(bf[j]!=1)
                {
                    temp=b[j]-f[i]; 
                    if(temp>=0)
                        if (lowest>temp)
                        {
                            ff[i]=j;
                            lowest=temp;
                        }
                }
            }
            frag[i]=lowest, bf[ff[i]]=1, lowest-10000;
        }
        printf("\nFile No\tFile Size \tBlock No\tBlock Size\tFragment");
        for(i=1; i<nf&& ff[i]!=0; i++)
        printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d", i, f[i], ff[i], b[ff[i]], frag[i]);
        return 0;
}


First_fit:
#include<stdio.h>
#define max 25
int main()
{
    int frag[max], b[max], f[max], bf[max]= {0}, ff[max]= {0}; 
    int i, j, nb, nf, temp, highest=0;
    system("cls");
    printf("\n\t Memory Management Scheme - Worst fit"); 
    printf("\nEnter the number of blocks:");
    scanf("%d", &nb);
    printf("Enter the number of files:"); 
    scanf("%d", &nf);
    printf("\nEnter the size of the blocks:\n");
    for(i=1; i<=nb; i++)
    {
        printf("Block %d:", i);
        scanf("%d", &b[i]);
    }
    printf("Enter the size of the files:\n");
    for(i=1; i<=nf; i++)
    {
        printf("File%d", i);
        scanf("%d", &f[i]);
    }
    for(i=1; i<=nf; i++)
    {
        for(j=1; j<=nb; j++)
        {
            if(bf[j]!=1) //if bf[j] is not allocated
            {
                temp=b[j]-f[i];
                if(temp>=0 && highest<temp)
                    ff[i]=j; 
                    highest=temp;
            }
        }
        frag[i]=highest; 
        bf[ff[i]]=1; 
        highest=0;
    }
    printf("\nFile_no\tFile_size\tBlock_size\tFragment");
    for(i=1; i<=nf; i++)
    {
        printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d", i, f[i], ff[i], b[ff[i]], frag[i]);
    }
return 0;
}
